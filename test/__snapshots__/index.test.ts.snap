// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`attributify > IllegalStr 1`] = `
"
<template>
  <input bg-green bg-red @input=\\"inputVal\\"   class=\\"bg-green bg-red\\"/>
  <input bg-green bg-red @input=\\"inputVal\\"   class=\\"bg-green bg-red\\">1111</>
</template>
"
`;

exports[`attributify > VElseStr 1`] = `
"
<template>
<view class='p-6' v-if='loading'>
</view>
<view class='p-6' v-else>
</view>
</template>
"
`;

exports[`attributify > attributesExtract 1`] = `
"
<template>
  <view >
    <button
      h-80 text-center flex flex-col align-center select-none all:transition-400
      bg=\\"blue-400 hover:blue-400 dark:!blue-400 dark:hover:blue-400\\"
      li-bg=\\"blue-500 hover:blue-500 dark:!blue-500 dark:hover:blue-500\\"
      un-bg=\\"red-500 hover:red-500 dark:!red-500 dark:hover:red-500\\"
      class=\\"text-red font-bold bg-blue-400 hover_cl_bg-blue-400 dark_cl_bg-_el_blue-400 dark_cl_bg-hover\\"
      :loading=\\"loading\\"
      my-class=\\"text-red font-bold\\"
      title=\\"this is title\\"
      my-prop
      non-value
      :class=\\"{ 'text-blue': true, 'text-green': false }\\"
      :class=\\"[ 'text-blue', 'text-green' ]\\"
      :class=\\"[ str === 'blue' ? 'text-blue' : 'text-red' ]\\"
    >
      Button
    </button>

    <button 
      text=\\"sm white\\"
      font=\\"mono light\\"
      p=\\"y-2 x-4\\"
      my-attr=\\"y-1 x-2 sm\\"
     class=\\"text-sm text-white font-mono font-light p-y-2 p-x-4 my-attr-y-1 my-attr-x-2 my-attr-sm\\">
      Button
    </button>

    <button 
      text=\\"sm white\\"
      font=\\"mono light\\"
      p=\\"y-2 x-4\\"
     class=\\"text-sm text-white font-mono font-light p-y-2 p-x-4\\">
      Button
    </button>

    <button border=\\"~ red\\" class=\\"border border-red\\">
      Button
    </button>

    <button flex=\\"~ col wrap\\" class=\\"flex flex-col flex-wrap\\">
      Button
    </button>

    <a text=\\"red\\" un-text=\\"blue\\" class=\\"text-red\\">This conflicts with links' text prop</a>

    <button 
      bg=\\"blue-400 hover:blue-500 dark:blue-500 dark:hover:blue-600\\"
      text=\\"sm white\\"
      font=\\"mono light\\"
      p=\\"y-2 x-4\\"
      border=\\"2 rounded blue-200\\"
     class=\\"bg-blue-400 hover_cl_bg-blue-500 dark_cl_bg-blue-500 dark_cl_bg-hover text-sm text-white font-mono font-light p-y-2 p-x-4 border-2 border-rounded border-blue-200\\">
      Button
    </button>

    <button 
      bg=\\"#333 grey-200 [#444]/40 red/50\\"
     class=\\"bg-_wn_333 bg-grey-200 bg-_lfl__wn_444_lfr__sl_40 bg-red_sl_50\\">
      Button
    </button>

    <image mode=\\"widthFix\\"></image> 
  </view>
</template>  
"
`;

exports[`attributify > attributesExtract 2`] = `
"
<template>
  <div h-80 text-center flex flex-col align-center select-none all:transition-400>
    <input type=\\"checkbox\\" peer mt-a>
    <div mb-a group peer-checked=\\"text-4xl\\">
      <div
        font-100 text-4xl mb--3 p-10
        bg-gradient=\\"to-r from-yellow-400 via-red-500 to-pink-500\\"
      >
        ~
      </div>
      <div text-5xl font-100 sm=\\"bg-blue-600\\">
        unocss
      </div>
      <div op-20 font-200 mt-1 tracking-wider group-hover=\\"text-teal-400 op-50\\">
        Re-imaging Atomic CSS
      </div>
    </div>
  </div>
  <div flex>
    <div ma inline-flex relative h-14>
      <input type=\\"text\\" m-0 pt-4 px-4 text-true-gray-800 peer 
      placeholder=\\"unocss\\" 
      un-placeholder=\\"text-red\\">
      <label absolute leading-1rem left-4 pointer-events-none text-gray-7 top=\\"1/3\\" transition=\\"200 linear\\"
        peer-not-placeholder-shown=\\"-translate-y-4 scale-75 origin-top-left text-green-500\\"
        peer-focus=\\"-translate-y-4 scale-75 origin-top-left text-green-500\\"
        before=\\"content-!\\"
        after=\\"content-[!]\\"
      >Experience now</label>
    </div>
  </div>
</template>

<script lang=\\"ts\\" setup>
import { onHide, onLaunch, onShow } from '@dcloudio/uni-app'
onLaunch(() => {
  console.log('App Launch')
})
onShow(() => {
  console.log('App Show')
})
onHide(() => {
  console.log('App Hide')
})
</script>

<style lang=\\"scss\\" scoped></style>
"
`;

exports[`attributify > classPrefixExtract 1`] = `
"
<template>
  <view bg-green bg-red text=\\"center left\\" class=\\"li-bg-green li-bg-red li-text-center li-text-left\\"></view>
</template>
"
`;

exports[`attributify > completeExtract 1`] = `
"
<template>
<view class=\\"fui-button__wrap\\" :class=\\"[!width || width==='100%' || width===true?'fui-button__flex-1':'']\\" :scope=\\"scope\\" @tap.stop=\\"handleTap\\" @click.stop=\\"handleTap\\" @click=\\"handleTap\\">
</view>
</template>
"
`;

exports[`attributify > emptyClassStr 1`] = `
"
<template>
  <view class=\\" bg-green bg-blue bg-red\\" bg-green bg=\\"blue red\\">
    <tm-skeleton-line :height=\\"props.height*4\\"></tm-skeleton-line>
  </view>
</template>
"
`;

exports[`attributify > escapeStr 1`] = `
"
<template>
  <button 
  bg=\\"#333 grey-200 [#444]/40 red/50\\" class=\\"bg-_wn_333 bg-grey-200 bg-_lfl__wn_444_lfr__sl_40 bg-red_sl_50\\">  
    Button
  </button>
</template>"
`;

exports[`attributify > escapeStr 2`] = `
"
<template>
  <button 
  bg=\\"#333 grey-200 [#444]/40 red/50\\" class=\\"bg--wr-333 bg-grey-200 bg--flr--wr-444-frr--sr-40 bg-red-sr-50\\">  
    Button
  </button>
</template>"
`;

exports[`attributify > ignoreNonValueExtract 1`] = `
"
<template>
  <view >
    <button
      h-80 text-center flex flex-col align-center select-none all:transition-400
      bg=\\"blue-400 hover:blue-400 dark:!blue-400 dark:hover:blue-400\\"
      li-bg=\\"blue-500 hover:blue-500 dark:!blue-500 dark:hover:blue-500\\"
      un-bg=\\"red-500 hover:red-500 dark:!red-500 dark:hover:red-500\\"
      class=\\"text-red font-bold text-center flex-col align-center select-none all_cl_transition-400 bg-blue-400 hover_cl_bg-blue-400 dark_cl_bg-_el_blue-400 dark_cl_bg-hover non-value\\"
      :loading=\\"loading\\"
      my-class=\\"text-red font-bold\\"
      title=\\"this is title\\"
      my-prop
      non-value
      :class=\\"{ 'text-blue': true, 'text-green': false }\\"
      :class=\\"[ 'text-blue', 'text-green' ]\\"
      :class=\\"[ str === 'blue' ? 'text-blue' : 'text-red' ]\\"
    >
      Button
    </button>

    <button 
      text=\\"sm white\\"
      font=\\"mono light\\"
      p=\\"y-2 x-4\\"
      my-attr=\\"y-1 x-2 sm\\"
     class=\\"text-sm text-white font-mono font-light p-y-2 p-x-4\\">
      Button
    </button>

    <button 
      text=\\"sm white\\"
      font=\\"mono light\\"
      p=\\"y-2 x-4\\"
     class=\\"text-sm text-white font-mono font-light p-y-2 p-x-4\\">
      Button
    </button>

    <button border=\\"~ red\\" class=\\"border border-red\\">
      Button
    </button>

    <button flex=\\"~ col wrap\\" class=\\"flex flex-col flex-wrap\\">
      Button
    </button>

    <a text=\\"red\\" un-text=\\"blue\\" class=\\"text-red\\">This conflicts with links' text prop</a>

    <button 
      bg=\\"blue-400 hover:blue-500 dark:blue-500 dark:hover:blue-600\\"
      text=\\"sm white\\"
      font=\\"mono light\\"
      p=\\"y-2 x-4\\"
      border=\\"2 rounded blue-200\\"
     class=\\"bg-blue-400 hover_cl_bg-blue-500 dark_cl_bg-blue-500 dark_cl_bg-hover text-sm text-white font-mono font-light p-y-2 p-x-4 border-2 border-rounded border-blue-200\\">
      Button
    </button>

    <button 
      bg=\\"#333 grey-200 [#444]/40 red/50\\"
     class=\\"bg-_wn_333 bg-grey-200 bg-_lfl__wn_444_lfr__sl_40 bg-red_sl_50\\">
      Button
    </button>

    <image mode=\\"widthFix\\"></image> 
  </view>
</template>  
"
`;

exports[`attributify > ignoreNonValueExtract 2`] = `
"
<template>
  <div h-80 text-center flex flex-col align-center select-none all:transition-400 class=\\"text-center flex-col align-center select-none all_cl_transition-400\\">
    <input type=\\"checkbox\\" peer mt-a class=\\"peer mt-a\\">
    <div mb-a group peer-checked=\\"text-4xl\\" class=\\"mb-a group\\">
      <div
        font-100 text-4xl mb--3 p-10
        bg-gradient=\\"to-r from-yellow-400 via-red-500 to-pink-500\\"
       class=\\"font-100 text-4xl mb--3 p-10\\">
        ~
      </div>
      <div text-5xl font-100 sm=\\"bg-blue-600\\" class=\\"text-5xl font-100\\">
        unocss
      </div>
      <div op-20 font-200 mt-1 tracking-wider group-hover=\\"text-teal-400 op-50\\" class=\\"op-20 font-200 mt-1 tracking-wider\\">
        Re-imaging Atomic CSS
      </div>
    </div>
  </div>
  <div flex>
    <div ma inline-flex relative h-14 class=\\"ma inline-flex relative h-14\\">
      <input type=\\"text\\" m-0 pt-4 px-4 text-true-gray-800 peer 
      placeholder=\\"unocss\\" 
      un-placeholder=\\"text-red\\" class=\\"m-0 pt-4 px-4 text-true-gray-800 peer\\">
      <label absolute leading-1rem left-4 pointer-events-none text-gray-7 top=\\"1/3\\" transition=\\"200 linear\\"
        peer-not-placeholder-shown=\\"-translate-y-4 scale-75 origin-top-left text-green-500\\"
        peer-focus=\\"-translate-y-4 scale-75 origin-top-left text-green-500\\"
        before=\\"content-!\\"
        after=\\"content-[!]\\"
       class=\\"absolute leading-1rem left-4 pointer-events-none text-gray-7\\">Experience now</label>
    </div>
  </div>
</template>

<script lang=\\"ts\\" setup>
import { onHide, onLaunch, onShow } from '@dcloudio/uni-app'
onLaunch(() => {
  console.log('App Launch')
})
onShow(() => {
  console.log('App Show')
})
onHide(() => {
  console.log('App Hide')
})
</script>

<style lang=\\"scss\\" scoped></style>
"
`;

exports[`attributify > nonValueExtract 1`] = `
"
<template>
  <view >
    <button
      h-80 text-center flex flex-col align-center select-none all:transition-400
      bg=\\"blue-400 hover:blue-400 dark:!blue-400 dark:hover:blue-400\\"
      li-bg=\\"blue-500 hover:blue-500 dark:!blue-500 dark:hover:blue-500\\"
      un-bg=\\"red-500 hover:red-500 dark:!red-500 dark:hover:red-500\\"
      class=\\"text-red font-bold h-80 text-center flex flex-col align-center select-none all_cl_transition-400 bg-blue-400 hover_cl_bg-blue-400 dark_cl_bg-_el_blue-400 dark_cl_bg-hover my-prop non-value\\"
      :loading=\\"loading\\"
      my-class=\\"text-red font-bold\\"
      title=\\"this is title\\"
      my-prop
      non-value
      :class=\\"{ 'text-blue': true, 'text-green': false }\\"
      :class=\\"[ 'text-blue', 'text-green' ]\\"
      :class=\\"[ str === 'blue' ? 'text-blue' : 'text-red' ]\\"
    >
      Button
    </button>

    <button 
      text=\\"sm white\\"
      font=\\"mono light\\"
      p=\\"y-2 x-4\\"
      my-attr=\\"y-1 x-2 sm\\"
     class=\\"text-sm text-white font-mono font-light p-y-2 p-x-4\\">
      Button
    </button>

    <button 
      text=\\"sm white\\"
      font=\\"mono light\\"
      p=\\"y-2 x-4\\"
     class=\\"text-sm text-white font-mono font-light p-y-2 p-x-4\\">
      Button
    </button>

    <button border=\\"~ red\\" class=\\"border border-red\\">
      Button
    </button>

    <button flex=\\"~ col wrap\\" class=\\"flex flex-col flex-wrap\\">
      Button
    </button>

    <a text=\\"red\\" un-text=\\"blue\\" class=\\"text-red\\">This conflicts with links' text prop</a>

    <button 
      bg=\\"blue-400 hover:blue-500 dark:blue-500 dark:hover:blue-600\\"
      text=\\"sm white\\"
      font=\\"mono light\\"
      p=\\"y-2 x-4\\"
      border=\\"2 rounded blue-200\\"
     class=\\"bg-blue-400 hover_cl_bg-blue-500 dark_cl_bg-blue-500 dark_cl_bg-hover text-sm text-white font-mono font-light p-y-2 p-x-4 border-2 border-rounded border-blue-200\\">
      Button
    </button>

    <button 
      bg=\\"#333 grey-200 [#444]/40 red/50\\"
     class=\\"bg-_wn_333 bg-grey-200 bg-_lfl__wn_444_lfr__sl_40 bg-red_sl_50\\">
      Button
    </button>

    <image mode=\\"widthFix\\"></image> 
  </view>
</template>  
"
`;

exports[`attributify > nonValueExtract 2`] = `
"
<template>
  <div h-80 text-center flex flex-col align-center select-none all:transition-400 class=\\"h-80 text-center flex flex-col align-center select-none all_cl_transition-400\\">
    <input type=\\"checkbox\\" peer mt-a class=\\"peer mt-a\\">
    <div mb-a group peer-checked=\\"text-4xl\\" class=\\"mb-a group\\">
      <div
        font-100 text-4xl mb--3 p-10
        bg-gradient=\\"to-r from-yellow-400 via-red-500 to-pink-500\\"
       class=\\"font-100 text-4xl mb--3 p-10\\">
        ~
      </div>
      <div text-5xl font-100 sm=\\"bg-blue-600\\" class=\\"text-5xl font-100\\">
        unocss
      </div>
      <div op-20 font-200 mt-1 tracking-wider group-hover=\\"text-teal-400 op-50\\" class=\\"op-20 font-200 mt-1 tracking-wider\\">
        Re-imaging Atomic CSS
      </div>
    </div>
  </div>
  <div flex class=\\"flex\\">
    <div ma inline-flex relative h-14 class=\\"ma inline-flex relative h-14\\">
      <input type=\\"text\\" m-0 pt-4 px-4 text-true-gray-800 peer 
      placeholder=\\"unocss\\" 
      un-placeholder=\\"text-red\\" class=\\"m-0 pt-4 px-4 text-true-gray-800 peer\\">
      <label absolute leading-1rem left-4 pointer-events-none text-gray-7 top=\\"1/3\\" transition=\\"200 linear\\"
        peer-not-placeholder-shown=\\"-translate-y-4 scale-75 origin-top-left text-green-500\\"
        peer-focus=\\"-translate-y-4 scale-75 origin-top-left text-green-500\\"
        before=\\"content-!\\"
        after=\\"content-[!]\\"
       class=\\"absolute leading-1rem left-4 pointer-events-none text-gray-7\\">Experience now</label>
    </div>
  </div>
</template>

<script lang=\\"ts\\" setup>
import { onHide, onLaunch, onShow } from '@dcloudio/uni-app'
onLaunch(() => {
  console.log('App Launch')
})
onShow(() => {
  console.log('App Show')
})
onHide(() => {
  console.log('App Hide')
})
</script>

<style lang=\\"scss\\" scoped></style>
"
`;

exports[`attributify > nonValueExtract 3`] = `
"
<template>
  <view animate-shake-y animate-iteration-infinite animate-duration-1500 class=\\"animate-shake-y animate-iteration-infinite animate-duration-1500\\"></view>
  <view animate=\\"shake-x iteration-infinite duration-1500\\" class=\\"animate-shake-x animate-iteration-infinite animate-duration-1500\\"></view>
</template>
"
`;

exports[`attributify > placeholderStr 1`] = `
"
<template>
<input type=\\"text\\"  placeholder=\\"What's your name?\\" />

<view
  text=\\"sm green\\"
  p=\\"y-2 x-4\\"
  m=\\"4\\"
 class=\\"text-sm text-green p-y-2 p-x-4 m-4\\">
xx
</view>


<view flex=\\"~ col wrap\\" class=\\"m4 flex flex-col flex-wrap\\">
  xxx
</view>




</template>
"
`;

exports[`attributify > prefix and classPrefix 1`] = `
"
<template>
  <view 
    text=\\"sm white\\"
    p=\\"y-4 x-4\\"
    bg-blue
    mx-4
    pr-text=\\"xl black\\"
    pr-p=\\"y-8 x-8\\"
    pr-bg-red
    pr-mx-8
   class=\\"text-sm text-white p-y-4 p-x-4 bg-blue mx-4 pr-bg-red pr-mx-8\\">
    Button  
  </view>
</template>
"
`;

exports[`attributify > prefix and classPrefix 2`] = `
"
<template>
  <view 
    text=\\"sm white\\"
    p=\\"y-4 x-4\\"
    bg-blue
    mx-4
    pr-text=\\"xl black\\"
    pr-p=\\"y-8 x-8\\"
    pr-bg-red
    pr-mx-8
   class=\\"cl-text-xl cl-text-black cl-p-y-8 cl-p-x-8 cl-bg-red cl-mx-8\\">
    Button  
  </view>
</template>
"
`;

exports[`attributify > prefixExtract 1`] = `
"
<template>
  <view >
    <button
      h-80 text-center flex flex-col align-center select-none all:transition-400
      bg=\\"blue-400 hover:blue-400 dark:!blue-400 dark:hover:blue-400\\"
      li-bg=\\"blue-500 hover:blue-500 dark:!blue-500 dark:hover:blue-500\\"
      un-bg=\\"red-500 hover:red-500 dark:!red-500 dark:hover:red-500\\"
      class=\\"text-red font-bold bg-red-500 hover_cl_bg-red-500 dark_cl_bg-_el_red-500 dark_cl_bg-hover\\"
      :loading=\\"loading\\"
      my-class=\\"text-red font-bold\\"
      title=\\"this is title\\"
      my-prop
      non-value
      :class=\\"{ 'text-blue': true, 'text-green': false }\\"
      :class=\\"[ 'text-blue', 'text-green' ]\\"
      :class=\\"[ str === 'blue' ? 'text-blue' : 'text-red' ]\\"
    >
      Button
    </button>

    <button 
      text=\\"sm white\\"
      font=\\"mono light\\"
      p=\\"y-2 x-4\\"
      my-attr=\\"y-1 x-2 sm\\"
    >
      Button
    </button>

    <button 
      text=\\"sm white\\"
      font=\\"mono light\\"
      p=\\"y-2 x-4\\"
    >
      Button
    </button>

    <button border=\\"~ red\\">
      Button
    </button>

    <button flex=\\"~ col wrap\\">
      Button
    </button>

    <a text=\\"red\\" un-text=\\"blue\\" class=\\"text-blue\\">This conflicts with links' text prop</a>

    <button 
      bg=\\"blue-400 hover:blue-500 dark:blue-500 dark:hover:blue-600\\"
      text=\\"sm white\\"
      font=\\"mono light\\"
      p=\\"y-2 x-4\\"
      border=\\"2 rounded blue-200\\"
    >
      Button
    </button>

    <button 
      bg=\\"#333 grey-200 [#444]/40 red/50\\"
    >
      Button
    </button>

    <image mode=\\"widthFix\\"></image> 
  </view>
</template>  
"
`;

exports[`attributify > prefixExtract 2`] = `
"
<template>
  <div h-80 text-center flex flex-col align-center select-none all:transition-400>
    <input type=\\"checkbox\\" peer mt-a>
    <div mb-a group peer-checked=\\"text-4xl\\">
      <div
        font-100 text-4xl mb--3 p-10
        bg-gradient=\\"to-r from-yellow-400 via-red-500 to-pink-500\\"
      >
        ~
      </div>
      <div text-5xl font-100 sm=\\"bg-blue-600\\">
        unocss
      </div>
      <div op-20 font-200 mt-1 tracking-wider group-hover=\\"text-teal-400 op-50\\">
        Re-imaging Atomic CSS
      </div>
    </div>
  </div>
  <div flex>
    <div ma inline-flex relative h-14>
      <input type=\\"text\\" m-0 pt-4 px-4 text-true-gray-800 peer 
      placeholder=\\"unocss\\" 
      un-placeholder=\\"text-red\\">
      <label absolute leading-1rem left-4 pointer-events-none text-gray-7 top=\\"1/3\\" transition=\\"200 linear\\"
        peer-not-placeholder-shown=\\"-translate-y-4 scale-75 origin-top-left text-green-500\\"
        peer-focus=\\"-translate-y-4 scale-75 origin-top-left text-green-500\\"
        before=\\"content-!\\"
        after=\\"content-[!]\\"
      >Experience now</label>
    </div>
  </div>
</template>

<script lang=\\"ts\\" setup>
import { onHide, onLaunch, onShow } from '@dcloudio/uni-app'
onLaunch(() => {
  console.log('App Launch')
})
onShow(() => {
  console.log('App Show')
})
onHide(() => {
  console.log('App Hide')
})
</script>

<style lang=\\"scss\\" scoped></style>
"
`;

exports[`attributify > pseudoStr 1`] = `
"
<template>
<view bg=\\"red-200 active:red-400\\" class=\\"bg-red-200 active_cl_bg-red-400\\"/>
</template>
"
`;

exports[`attributify > scriptStr 1`] = `
"
<template>
  <view bg=\\"#333\\" p=\\"x-6 y-10\\" w100 h200 class=\\"bg-_wn_333 p-x-6 p-y-10 w100 h200\\">this is a unocss</view>
</template>

<script lang=\\"ts\\" setup>
const CheckboxGropup = ref<InstanceType<typeof tmCheckboxGroup> | null>(null)
</script>
"
`;

exports[`attributify > scriptStr 2`] = `
"
<script lang=\\"ts\\" setup>
const CheckboxGropup = ref<InstanceType<typeof tmCheckboxGroup> | null>(null)
const a = 1
</script>
"
`;

exports[`attributify > valuelessStr 1`] = `
"
<template>
  <view class=\\"flex-1 bg-blue text-_lfl_16px_lfr_ text-center text-100_pes_ text-1_dl_2\\" text-[16px] text-center text-100% text-1.2>text</view>
  <view class=\\"flex-1 bg-_lfl__wn_ccc_lfr_\\" bg-[#ccc]>text</view>
</template>
"
`;
